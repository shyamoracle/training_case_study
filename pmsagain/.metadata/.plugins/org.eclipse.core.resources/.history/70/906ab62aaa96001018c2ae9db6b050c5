<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      background: linear-gradient(135deg, #1c1c2e, #3c2c60);
      color: white;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .card {
      background-color: #2d2d44;
      color: white;
      box-shadow: 0 0 15px rgba(125, 105, 200, 0.2);
    }
    .nav-tabs .nav-link.active {
      background-color: #6c5ce7;
      border-color: #6c5ce7;
    }
    canvas {
      background: white;
      border-radius: 10px;
    }
  </style>
</head>
<body>

<div class="container py-4">

  <!-- Nav Tabs -->
  <ul class="nav nav-tabs bg-dark p-2 mb-4">
    <li class="nav-item">
      <a class="nav-link text-light active" href="dashboard.html">ðŸ“Š Dashboard</a>
    </li>
    <li class="nav-item">
      <a class="nav-link text-light" href="index.html">ðŸ“‹ Details</a>
    </li>
  </ul>

  <h1 class="text-center mb-4">ðŸ“Š Product Dashboard</h1>

  <!-- Dashboard Cards -->
  <div class="row mb-4 text-center">
    <div class="col-md-3 mb-3">
      <div class="card p-3">
        <h4>Total Products</h4>
        <span class="badge bg-primary fs-4" id="totalProducts">0</span>
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <div class="card p-3">
        <h4>Avg. Price</h4>
        <span class="badge bg-success fs-4" id="averagePrice">$0</span>
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <div class="card p-3">
        <h4>Earliest Release</h4>
        <span class="badge bg-warning text-dark fs-6" id="earliestDate">-</span>
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <div class="card p-3">
        <h4>Latest Release</h4>
        <span class="badge bg-info text-dark fs-6" id="latestDate">-</span>
      </div>
    </div>
  </div>

  <!-- Charts -->
  <div class="row g-4">
    <div class="col-md-6">
      <div class="card p-3">
        <h5 class="text-center">ðŸ“ˆ Prices</h5>
        <canvas id="priceChart" height="200"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card p-3">
        <h5 class="text-center">ðŸ“† Release Timeline</h5>
        <canvas id="releaseChart" height="200"></canvas>
      </div>
    </div>
  </div>

</div>

<script>
  // Fetch product data from backend
  fetch('pmsapp/webapi/products/all')
    .then(res => res.json())
    .then(products => {
      const total = products.length;
      const prices = products.map(p => p.productPrice);
      const names = products.map(p => p.productName);
      const dates = products.map(p => new Date(p.productReleasedOn));

      // Stats
      const avg = prices.reduce((a, b) => a + b, 0) / total;
      const earliest = new Date(Math.min(...dates));
      const latest = new Date(Math.max(...dates));

      document.getElementById('totalProducts').textContent = total;
      document.getElementById('averagePrice').textContent = `$${avg.toFixed(2)}`;
      document.getElementById('earliestDate').textContent = earliest.toISOString().split('T')[0];
      document.getElementById('latestDate').textContent = latest.toISOString().split('T')[0];

      // Price Chart
      new Chart(document.getElementById('priceChart'), {
        type: 'bar',
        data: {
          labels: names,
          datasets: [{
            label: 'Price ($)',
            data: prices,
            backgroundColor: '#74b9ff'
          }]
        }
      });

      // Release Chart
      new Chart(document.getElementById('releaseChart'), {
        type: 'line',
        data: {
          labels: names,
          datasets: [{
            label: 'Release Date',
            data: dates.map(d => d.getTime()),
            backgroundColor: '#a29bfe',
            borderColor: '#a29bfe',
            borderWidth: 2,
            pointRadius: 3,
            fill: false,
            tension: 0.3
          }]
        },
        options: {
          scales: {
            y: {
              ticks: {
                callback: function(value) {
                  return new Date(value).toISOString().split('T')[0];
                }
              }
            }
          }
        }
      });
    })
    .catch(err => {
      console.error('Failed to load product data:', err);
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
